version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: torres_postgres
    environment:
      POSTGRES_DB: torres_db
      POSTGRES_USER: torres_user
      POSTGRES_PASSWORD: torres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U torres_user -d torres_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for Cache and Celery
  redis:
    image: redis:7-alpine
    container_name: torres_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # FastAPI Application
  api:
    build: .
    container_name: torres_api
    environment:
      DATABASE_URL: postgresql+asyncpg://torres_user:torres_password@postgres:5432/torres_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
      SECRET_KEY: super-secret-key-for-development-only-change-in-production
      ENVIRONMENT: development
      LOG_LEVEL: INFO
      LOG_FORMAT: json
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery_worker:
    build: .
    container_name: torres_celery_worker
    environment:
      DATABASE_URL: postgresql+asyncpg://torres_user:torres_password@postgres:5432/torres_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
      SECRET_KEY: super-secret-key-for-development-only-change-in-production
      ENVIRONMENT: development
      LOG_LEVEL: INFO
      LOG_FORMAT: json
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: python celery_worker.py

  # Celery Beat (Scheduler)
  celery_beat:
    build: .
    container_name: torres_celery_beat
    environment:
      DATABASE_URL: postgresql+asyncpg://torres_user:torres_password@postgres:5432/torres_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
      SECRET_KEY: super-secret-key-for-development-only-change-in-production
      ENVIRONMENT: development
      LOG_LEVEL: INFO
      LOG_FORMAT: json
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: python celery_beat.py

  # Redis Insight (GUI para Redis)
  redis_insight:
    image: redislabs/redisinsight:latest
    container_name: torres_redis_insight
    ports:
      - "8001:8001"
    depends_on:
      - redis
    volumes:
      - redis_insight_data:/db

volumes:
  postgres_data:
  redis_data:
  redis_insight_data: